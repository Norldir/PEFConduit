; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "PEFConduit"
#define MyAppVersion "1.00"
#define MyAppPublisher "Tecinco informática LTda"
#define MyAppURL "http://www.tecinco.com.br/PEFConduit"
#define MyAppExeName "PEFConduitAPP.exe"


[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{AFAF292A-996F-4813-9882-43D0DAC69630}}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName=c:\{#MyAppName}
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
OutputDir=C:\Projetos\transp_new\source\IntegracaoContratoFrete\PEFConduit\install\out\
OutputBaseFilename=setup_PEFConduit_full
SetupIconFile=C:\Projetos\transp_new\source\IntegracaoContratoFrete\PEFConduit\graficos\PEFConduit_to_ico3.ico
Compression=lzma
SolidCompression=yes
InfoBeforeFile=info.txt

[Languages]
Name: "brazilianportuguese"; MessagesFile: "compiler:Languages\BrazilianPortuguese.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1

[Files]
Source: "C:\projetos\transp_new\source\IntegracaoContratoFrete\PEFConduit\install\binarios\PEFConduitAPP.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\projetos\transp_new\source\IntegracaoContratoFrete\PEFConduit\install\config\PEFCondutiConfig.xml"; DestDir: "{app}"; Flags: confirmoverwrite onlyifdoesntexist
Source: "C:\projetos\transp_new\source\IntegracaoContratoFrete\PEFConduit\install\binarios\*"; DestDir: "{app}"; Flags: ignoreversion createallsubdirs recursesubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files
Source: "C:\projetos\transp_new\source\IntegracaoContratoFrete\PEFConduit\install\dll_system32\*"; DestDir: "{sys}"
Source: "C:\projetos\transp_new\source\IntegracaoContratoFrete\PEFConduit\install\dll_system32\capicom.dll"; DestDir: "{sys}"; Flags: regserver
Source: "C:\projetos\transp_new\source\IntegracaoContratoFrete\PEFConduit\install\dll_systemsysow64\*"; DestDir: "{app}"

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: quicklaunchicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Flags: nowait postinstall runascurrentuser; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"

[Types]

[Components]


[PreCompile]
Name: "C:\projetos\transp_new\source\IntegracaoContratoFrete\PEFConduit\install\atualizabinarios.cmd"

[PostCompile]
Name: "C:\projetos\transp_new\source\IntegracaoContratoFrete\PEFConduit\install\copy_tmp.cmd"
Name: "C:\projetos\transp_new\source\IntegracaoContratoFrete\PEFConduit\install\upload.cmd"

[Code]

#include "C:\projetos\transp_new\source\IntegracaoContratoFrete\PEFConduit\install\ControleServico.script"

const
WM_CLOSE = 16;
WM_ENDSESSION       = $0016;

Function IniciaServicoSeExistir : Boolean;
begin
  try
    SimpleStartService('PEFConduit', true, true ); 
  except
  end;
end;

procedure PararServicoeMonitor;
var winHwnd: longint;
    retVal : boolean;
    strProg: string;
begin
  try
    //Or FindWindowByWindowName.  If using by Name, the name must be exact and is case sensitive.
    strProg := 'PEFConduitAPP';
    winHwnd := FindWindowByWindowName(strProg);
    repeat
      Log('winHwnd: ' + inttostr(winHwnd));
      if winHwnd <> 0 then
      begin
        retVal:=postmessage(winHwnd,WM_ENDSESSION,0,0);
        sleep(2000);     
      end;
      winHwnd := FindWindowByWindowName(strProg);     
    until winHwnd = 0;
  except
  end;
  try
       SimpleStopService('PEFConduit', true, true ); 
  except
      ShowExceptionMessage;
  end;
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  case CurStep of 
     ssInstall     : PararServicoeMonitor;
     ssPostInstall : IniciaServicoSeExistir;     
  end; 
end;

Function InitializeSetup : Boolean;
begin
  result := true;
  //PararServicoeMonitor;
end;
